<?php

/**
 * @file
 * Contains gs_custom.module.
 */

use Drupal\Core\Url;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function gs_custom_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the gs_custom module.
    case 'help.page.gs_custom':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Gsweb customization') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function gs_custom_theme() {
  return [
    'gs_custom_company_address' => [
      'template' => 'gs_custom_company_address',
      'variables' => [
        'company_name' => '',
        'company_address' => '',
        'company_phone' => '',
        'company_fax' => '',
      ]
    ],
  ];
}

function gs_custom_menu_local_tasks_alter(&$data, $route_name) {
  // ksm($route_name);
  switch ($route_name) {
    case 'entity.taxonomy_term.canonical':
      $sort_url = '';
      $current_tid = \Drupal::RouteMatch()->getParameter('taxonomy_term')->id();
      $route_provider = \Drupal::service('router.route_provider');
      $exists = count($route_provider->getRoutesByNames(['view.taxonomy_term.page_2'])) === 1;
      if($exists) {
        $sort_url = Url::fromRoute('view.taxonomy_term.page_2', ['arg_0' => $current_tid]);
        $data['tabs'][0]['view.taxonomy_term.page_2'] = [
          '#theme' => 'menu_local_task',
          '#link' => [
            'title' => t('Sort'),
            'url' => $sort_url,
            'localized_options' => [
              'attributes' => ['title' => t('Sort')]
            ],
          ]
        ];
      }
    break;
  }
}

function gs_custom_preprocess_block(&$vars) {
  if($vars['plugin_id'] == 'local_tasks_block') {
    if ($vars['is_admin']) {
      $vars['attributes']['class'] = array_merge($vars['attributes']['class'], ['local-tasks', 'mt-3', 'container']);
    } else {
      unset($vars['content']);
    }
  }
}

// draggableviews attachemnet 정렬 폼의 action을 바로잡습니다.
function gs_custom_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (strpos($form_id, 'views_form_taxonomy_term_attachment') === 0) {
    $form['#action'] .= '/sort';
  }
}
